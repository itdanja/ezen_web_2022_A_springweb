server.port =8081

## h2 [ ??? ???? DB ( ??? ?? ) / ???? = ??? ????? ? ??? ]
#spring.h2.console.enabled = true
## h2 JDBC URL   [ ? ??? colosle ?? jdbc url ?? ]
#spring.datasource.url= jdbc:h2:mem:mydb
## h2 username , password [  ? ???    username= sa  , password=?? ]
#spring.datasource.username = admin
#spring.datasource.password = 1234

#mysql
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url= jdbc:mysql://localhost:3307/springweb
spring.datasource.username = root
spring.datasource.password =1234


# JPA
spring.jpa.show_sql = true 
spring.jpa.hibernate.ddl-auto = update
#spring.jpa.hibernate.ddl-auto = create

# oauth2 \uB124\uC774\uBC84
# 1. \uB124\uC774\uBC84 \uC560\uD50C\uCF00\uC774\uC158\uC758 \uBC1C\uAE09 \uBC1B\uC740 client-id / client-secret
spring.security.oauth2.client.registration.naver.client-id=jgACmSopR8XCxNy_lzE1
spring.security.oauth2.client.registration.naver.client-secret=bEW7SWvvRj
#2. \uB3D9\uC758\uD56D\uBAA9 [ \uAC00\uC838\uC62C \uBCC0\uC218\uB4E4 ]
spring.security.oauth2.client.registration.naver.scope = name , email
#3. \uC694\uCCAD url  -> Callback URL
spring.security.oauth2.client.registration.naver.redirect-uri={baseUrl}/{action}/oauth2/code/{registrationId}
#4. \uC778\uC99D \uD1A0\uD070 \uD0C0\uC785
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
#5. \uD074\uB77C\uC774\uC5B8\uD2B8 \uC774\uB984
spring.security.oauth2.client.registration.naver.client-name= naver
# 6. \uC778\uC99Durl
spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
# 7. \uD1A0\uD070url
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
# 8. \uD68C\uC6D0\uC815\uBCF4url
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
# 9. \uD68C\uC6D0\uC815\uBCF4\uAC00 \uB4E4\uC5B4\uC788\uB294 JSON\uC758  \uD0A4 \uC774\uB984
spring.security.oauth2.client.provider.naver.user-name-attribute=response


# oauth2 \uCE74\uCE74\uC624
# \uCE74\uCE74\uC624 \uAC1C\uBC1C\uC790 \uC560\uD50C\uB9AC\uCF00\uC774\uC158 \uC758 REST API \uD0A4
spring.security.oauth2.client.registration.kakao.client-id = 7dc37d88ec2a5f582f8261fb80980d3c
spring.security.oauth2.client.registration.kakao.client-secret = Eo4J1Oc3dshA6MJFMH9YXIQjRJToOC02
spring.security.oauth2.client.registration.kakao.scope = profile_nickname,account_email
spring.security.oauth2.client.registration.kakao.redirect-uri={baseUrl}/{action}/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
# \uD074\uB77C\uC774\uC5B8\uD2B8 \uC774\uB984 \uB124\uC774\uBC84-> \uCE74\uCE74\uC624 \uBCC0\uACBD
spring.security.oauth2.client.registration.kakao.client-name=kakao
# provider \uB4E4\uC758 \uC8FC\uC18C : \uB124\uC774\uBC84 -> \uCE74\uCE74\uC624 \uBCC0\uACBD
spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.provider.kakao.user-name-attribute=kakao_account
# (\uCE74\uCE74\uC624\uB294 http \uC694\uCCAD\uBA54\uC18C\uB4DC : post \uB9CC\uAC00\uB2A5 )
spring.security.oauth2.client.registration.kakao.client-authentication-method=post


# SMTP \uC778\uC99D \uC124\uC815
spring.mail.host =smtp.naver.com
spring.mail.port =587
spring.mail.username=\uBCF4\uB0B4\uB294\uC0AC\uB78C\uC774\uBA54\uC77C 
spring.mail.password=\uBCF4\uB0B4\uB294\uC0AC\uB78C\uC774\uBA54\uC77C\uD328\uC2A4\uC6CC\uB4DC 
# \uBCF4\uB0B4\uB294\uC0AC\uB78C\uC758 \uD68C\uC6D0\uAC80\uC99D
spring.mail.properties.mail.smtp.auth = true
# \uC774\uBA54\uC77C \uC804\uC1A1\uC2DC \uC0AC\uC6A9\uB418\uB294 \uBCF4\uC548\uD504\uB85C\uD1A0\uCF5C : TLS ( \uB124\uC774\uBC84\uAC00 TLS \uD544\uC694 )
spring.mail.properties.mail.smtp.starttls = true

